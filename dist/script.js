(()=>{"use strict";(()=>{function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var t=function(){function t(e,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.image=e,this.title=r,this.number=n}var r,n;return r=t,(n=[{key:"render",value:function(){return'<div class="card" data-number="'.concat(this.number,'">\n      <div class="card__image"><img src="').concat(this.image,'"></div>\n      <span class="card__name">').concat(this.title,"</span>\n    </div>")}}])&&e(r.prototype,n),t}();function r(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var n=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}var t,n;return t=e,n=[{key:"render",value:function(){return'<div class="switch-container">\n      <div class="train-mode active-mode">Train</div>\n      <label class="switch">\n        <input type="checkbox">\n        <span class="slider round"></span>\n      </label>\n      <div class="game-mode">Play</div>\n    </div>'}}],null&&r(t.prototype,null),n&&r(t,n),e}();const a={startGameButton:null,boxStars:null,currentWords:[],correctAnswer:null,wrongAnswer:null,soundWin:null,soundLose:null,repeat:null,currentWord:null,mistakes:0,wordsUsed:[],repeatMode:!1,init:function(){var e=this;this.repeat=!1,this.currentWords=[],this.currentWord=null,this.wordsUsed=[],this.startGameButton=document.createElement("button"),this.startGameButton.classList.add("button-play"),this.startGameButton.innerText="Start game",this.boxStars=document.createElement("div"),this.boxStars.classList.add("box-stars"),this.correctAnswer=new Audio("./assets/sounds/correct.mp3"),this.wrongAnswer=new Audio("./assets/sounds/error.mp3"),this.soundWin=new Audio("./assets/sounds/success.mp3"),this.soundLose=new Audio("./assets/sounds/failure.mp3"),document.querySelector(".container .wrapper").appendChild(this.startGameButton),document.querySelector(".container .wrapper").appendChild(this.boxStars),this.startGameButton.addEventListener("click",(function(){e.repeat?e.currentWord.play():(e.startGameButton.classList.add("repeat"),e.repeat=!0,e.play())}))},play:function(){var e=this,t=document.querySelectorAll(".card-word__front");t.forEach((function(t){e.currentWords.push(t.getAttribute("data-name"))})),this.currentWords.sort((function(){return Math.random()-.5}));var r=0,n=function(){e.currentWord=new Audio("./assets/sounds/".concat(e.currentWords[r],".mp3")),e.currentWord.load(),e.currentWord.play()};n(),t.forEach((function(t){t.addEventListener("click",(function(){if(t.getAttribute("data-name")===e.currentWords[r]){e.wordsUsed.push(e.currentWords[r]),c.countingStatistics(e.currentWords[r],"correct"),e.correctAnswer.play(),t.style.filter="blur(5px)";var a=document.createElement("img");a.src="./assets/icons/star-win.svg",e.boxStars.appendChild(a),document.querySelector(".card-word:nth-child(".concat(+t.getAttribute("data-number")+1,")")).classList.remove("active-card"),(r+=1)<e.currentWords.length?setTimeout(n,500):setTimeout((function(){e.finishGame()}),1e3)}else if(!e.wordsUsed.includes(t.getAttribute("data-name"))){c.countingStatistics(e.currentWords[r],"wrong"),e.mistakes+=1;var i=document.createElement("img");i.src="./assets/icons/star.svg",e.boxStars.appendChild(i),e.wrongAnswer.play()}}))}))},finishGame:function(){var e,t,r=this;l.removeContent(),0===this.mistakes?(e="Congratulations! You win!",t="./assets/icons/success.svg",this.soundWin.play()):(e="You lost(: Train and try again!</br>\n        You made ".concat(this.mistakes," mistake(s)."),t="./assets/icons/failure.svg",this.soundLose.play());var n=document.querySelector(".container"),a='<span class="win-title">'.concat(e,'</span>\n    <div class="win-image"><img src="').concat(t,'"></div>');n.innerHTML+=a;var i=document.createElement("div");i.classList.add("buttons-finish");var o=document.createElement("button");o.classList.add("new-game"),o.innerText="New game";var s=document.createElement("button");s.classList.add("main-menu"),s.innerText="Main menu",i.appendChild(o),i.appendChild(s),o.addEventListener("click",(function(){r.repeatMode?c.repeatDifficultWords():l.setContentCards(l.activeCard)})),s.addEventListener("click",(function(){r.repeatMode=!1,l.setTitleCards(),document.querySelector(".navigation-item.active").classList.remove("active"),document.querySelector(".navigation-item:first-child").classList.add("active")})),n.appendChild(i),this.mistakes=0}};var i={init:function(){fetch("./assets/json/cards.json").then((function(e){return e.json()})).then((function(e){var t=e.flat(),r=[];t.forEach((function(e){var t={word:e.word,translation:e.translation,category:e.category,clicks:0,correct:0,wrong:0,percent:0,image:e.image};r.push(t)})),localStorage.setItem("english-for-kids","".concat(JSON.stringify(r)))}))},countingStatistics:function(e,t){var r=JSON.parse(localStorage.getItem("english-for-kids"));r.forEach((function(r){if(r.word===e){switch(t){case"clicks":r.clicks+=1;break;case"correct":r.correct+=1;break;case"wrong":r.wrong+=1}r.wrong+r.correct>0&&(r.percent=100*r.wrong/(r.wrong+r.correct))}})),localStorage.setItem("english-for-kids","".concat(JSON.stringify(r)))},buildingTable:function(e){for(var t=this,r=document.querySelector(".container");r.firstChild;)r.removeChild(r.firstChild);var n=document.createElement("div");n.classList.add("wrapper");var a=document.createElement("div");a.classList.add("panel-buttons");var i=document.createElement("button");i.classList.add("repeat-button"),i.innerText="Repeat difficult words";var c=document.createElement("button");c.classList.add("reset-button"),c.innerText="Reset",a.appendChild(i),a.appendChild(c);var o=document.createElement("table");o.classList.add("table"),n.appendChild(a),n.appendChild(o),r.appendChild(n),c.addEventListener("click",(function(){t.resetLocalStorage()})),i.addEventListener("click",(function(){t.repeatDifficultWords()})),o.innerHTML="<tr>\n      <th>Word</th>\n      <th>Translation</th>\n      <th>Category</th>\n      <th>Clicks</th>\n      <th>Correct</th>\n      <th>Wrong</th>\n      <th>% errors</th>\n    </tr>",e.forEach((function(e){o.innerHTML+="<tr>\n        <td>".concat(e.word,"</td>\n        <td>").concat(e.translation,"</td>\n        <td>").concat(e.category,"</td>\n        <td>").concat(e.clicks,"</td>\n        <td>").concat(e.correct,"</td>\n        <td>").concat(e.wrong,"</td>\n        <td>").concat(e.percent.toFixed(1),"</td>\n      </tr>")})),document.querySelectorAll("th").forEach((function(e){e.addEventListener("click",(function(){"↓"===e.innerText[0]?t.sortColumn(e.innerText.slice(2),!1):"↑"===e.innerText[0]?t.sortColumn(e.innerText.slice(2),!0):t.sortColumn(e.innerText,!0)}))}))},sortObject:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"word";return e.sort((function(e,r){return e["".concat(t)]>r["".concat(t)]?1:e["".concat(t)]<r["".concat(t)]?-1:0})),e},sortColumn:function(e,t){var r=JSON.parse(localStorage.getItem("english-for-kids"));"% errors"===e&&(e="percent");var n,a,i=this.sortObject(r,e.toLowerCase());switch(t&&e.match(/Word|Translation|Category/)?(n="&darr;",this.buildingTable(i)):e.match(/Word|Translation|Category/)?(n="&uarr;",this.buildingTable(i.reverse())):t?(n="&darr;",this.buildingTable(i.reverse())):(n="&uarr;",this.buildingTable(i)),e){case"Word":a=document.querySelector("th:first-child");break;case"Translation":a=document.querySelector("th:nth-child(2)");break;case"Category":a=document.querySelector("th:nth-child(3)");break;case"Clicks":a=document.querySelector("th:nth-child(4)");break;case"Correct":a=document.querySelector("th:nth-child(5)");break;case"Wrong":a=document.querySelector("th:nth-child(6)");break;case"percent":a=document.querySelector("th:last-child")}a.innerHTML="".concat(n," ").concat(a.innerHTML)},repeatDifficultWords:function(){a.repeatMode=!0;for(var e=document.querySelector(".container");e.firstChild;)e.removeChild(e.firstChild);var t=document.createElement("div");t.classList.add("wrapper"),e.appendChild(t);var r=document.createElement("div");r.classList.add("cards");var i=JSON.parse(localStorage.getItem("english-for-kids")),c=this.sortObject(i,"wrong").reverse();if(0===c[0].wrong)t.innerHTML+='<div class="subtitle">There are no words here yet :-)</div>',setTimeout((function(){document.querySelector(".title").click()}),2e3);else{t.innerHTML+=n.render();for(var o=0;o<8;o+=1)if(0!==c[o].wrong){var d=new s(c[o].image,c[o].word,c[o].translation,o);r.appendChild(d.render())}t.appendChild(r);var l=document.querySelector("input[type=checkbox]");l.addEventListener("change",(function(){document.querySelector(".train-mode").classList.toggle("active-mode"),document.querySelector(".game-mode").classList.toggle("active-mode");var e=document.querySelectorAll(".card-word__front-image");l.checked?(e.forEach((function(e){e.style.height="260px"})),a.init()):(e.forEach((function(e){e.style.height="200px"})),document.querySelector(".container .wrapper").removeChild(document.querySelector(".button-play")),document.querySelector(".container .wrapper").removeChild(document.querySelector(".box-stars")))}))}},resetLocalStorage:function(){var e=JSON.parse(localStorage.getItem("english-for-kids")).map((function(e){return{word:e.word,translation:e.translation,category:e.category,clicks:0,correct:0,wrong:0,percent:0,image:e.image}}));this.buildingTable(this.sortObject(e)),localStorage.setItem("english-for-kids","".concat(JSON.stringify(e)))}};localStorage.getItem("english-for-kids")||i.init();const c=i;function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s=function(){function e(t,r,n,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.image=t,this.word=r,this.translation=n,this.number=a,this.card=null,this.cardFront=null,this.cardBack=null}var t,r;return t=e,(r=[{key:"render",value:function(){var e=this;this.card=document.createElement("div"),this.card.classList.add("card-word","active-card");var t=(6*Math.random()-3).toFixed(1);this.card.setAttribute("style","transform: rotate(".concat(t,"deg);")),this.cardFront=document.createElement("div"),this.cardFront.classList.add("card-word__front"),this.cardFront.setAttribute("data-number","".concat(this.number)),this.cardFront.setAttribute("data-name","".concat(this.word));var r=document.createElement("div");r.classList.add("card-word__front-image");var n=document.createElement("img");n.src="./".concat(this.image),r.appendChild(n);var a=document.createElement("div");a.classList.add("card-word__front-name"),a.innerText="".concat(this.word);var i=document.querySelector("label > input");this.cardFront.addEventListener("click",(function(t){t.target.classList.contains("reverse-button")||i.checked||(c.countingStatistics(e.word,"clicks"),e.toVoice())}));var o=document.createElement("div");o.classList.add("reverse-button"),o.setAttribute("data-number","".concat(this.number)),o.addEventListener("click",(function(){e.reverseCard()})),this.cardFront.appendChild(r),this.cardFront.appendChild(a),this.cardFront.appendChild(o),this.cardBack=document.createElement("div"),this.cardBack.classList.add("card-word__back");var s=document.createElement("div");s.classList.add("card-word__back-image");var d=document.createElement("img");d.src="./".concat(this.image),s.appendChild(d);var l=document.createElement("div");return l.classList.add("card-word__back-name"),l.innerText="".concat(this.translation),this.cardBack.appendChild(s),this.cardBack.appendChild(l),this.card.appendChild(this.cardFront),this.card.appendChild(this.cardBack),this.card}},{key:"toVoice",value:function(){var e=new Audio("./assets/sounds/".concat(this.word,".mp3"));e.load(),e.play()}},{key:"reverseCard",value:function(){var e=this;this.cardFront.style.transform="rotateY(180deg)",this.cardBack.style.transform="rotateY(360deg)",this.card.addEventListener("mouseleave",(function(){e.cardFront.style.transform="rotateY(0deg)",e.cardBack.style.transform="rotateY(180deg)"}))}}])&&o(t.prototype,r),e}(),d={activeCard:null,title:{0:"Action (set A)",1:"Action (set B)",2:"Action (set C)",3:"Adjective",4:"Animal (set A)",5:"Animal (set B)",6:"Clothes",7:"Emotion"},images:{0:"./assets/images/categories/actionA.jpg",1:"./assets/images/categories/actionB.jpg",2:"./assets/images/categories/actionC.jpg",3:"./assets/images/categories/adjective.jpg",4:"./assets/images/categories/animalA.jpg",5:"./assets/images/categories/animalB.jpg",6:"./assets/images/categories/clothes.jpg",7:"./assets/images/categories/emotion.jpg"},setTitleCards:function(){var e=this;a.repeatMode=!1,this.removeContent();var r=document.createElement("div");r.classList.add("wrapper"),document.querySelector(".container").appendChild(r);var n=document.createElement("div");n.classList.add("cards-title");for(var i=0;i<8;i+=1){var c=new t(this.images[i],this.title[i],i);n.innerHTML+=c.render()}n.innerHTML+='<div class="subtitle">Hello! choose a category:</div>',r.appendChild(n),document.querySelectorAll(".card").forEach((function(t){t.addEventListener("click",(function(){e.removeContent(),e.activeCard=t.getAttribute("data-number"),e.setContentCards(e.activeCard)}))}))},setContentCards:function(e){a.repeatMode=!1,this.removeContent();var t=document.createElement("div");t.classList.add("wrapper"),t.innerHTML+=n.render(),document.querySelector(".container").appendChild(t);var r=document.createElement("div");r.classList.add("cards"),fetch("./assets/json/cards.json").then((function(e){return e.json()})).then((function(n){for(var a=n[e],i=0;i<a.length;i+=1){var c=new s(a[i].image,a[i].word,a[i].translation,i);r.appendChild(c.render())}t.appendChild(r)}));var i=document.querySelector("input[type=checkbox]");i.addEventListener("change",(function(){document.querySelector(".train-mode").classList.toggle("active-mode"),document.querySelector(".game-mode").classList.toggle("active-mode");var e=document.querySelectorAll(".card-word__front-image");i.checked?(e.forEach((function(e){e.style.height="260px"})),a.init()):(e.forEach((function(e){e.style.height="200px"})),document.querySelector(".container .wrapper").removeChild(document.querySelector(".button-play")),document.querySelector(".container .wrapper").removeChild(document.querySelector(".box-stars")))}))},removeContent:function(){for(var e=document.querySelector(".container");e.firstChild;)e.removeChild(e.firstChild)}};d.setTitleCards();const l=d;var u=document.querySelector(".modal"),m=document.querySelectorAll(".navigation-item"),h={burgerBox:null,buttonOff:!0,init:function(){var e=this;this.burgerBox=document.createElement("div"),this.burgerBox.className="burger-menu__button";var t=document.createElement("div");t.className="first-line";var r=document.createElement("div");r.className="second-line";var n=document.createElement("div");n.className="third-line",this.burgerBox.appendChild(t),this.burgerBox.appendChild(r),this.burgerBox.appendChild(n),this.burgerBox.addEventListener("click",(function(){m.forEach((function(e){e.classList.toggle("navigation-item_open")})),document.querySelector(".burger-menu").classList.toggle("burger-menu_open"),e.buttonOff?(t.style.transform="translateY(13px) rotate(45deg)",r.style.transform="translateX(-40px)",n.style.transform="translateY(-13px) rotate(-45deg)",u.classList.remove("modal-disabled"),e.buttonOff=!1):(t.style.transform="translateY(0) rotate(0)",r.style.transform="translateX(0)",n.style.transform="translateY(0) rotate(0)",u.classList.add("modal-disabled"),e.buttonOff=!0)})),document.querySelector(".header .wrapper").prepend(this.burgerBox)}};h.init(),u.addEventListener("click",(function(){h.burgerBox.click()}));const v=h;document.querySelectorAll(".navigation-item").forEach((function(e){e.addEventListener("click",(function(){if(v.burgerBox.click(),document.querySelector(".navigation-item.active").classList.remove("active"),e.classList.add("active"),"main"===e.getAttribute("data-number"))l.setTitleCards();else if("statistics"===e.getAttribute("data-number")){var t=JSON.parse(localStorage.getItem("english-for-kids")),r=c.sortObject(t);c.buildingTable(r),document.querySelector("th:nth-child(1)").innerHTML="&darr; Word"}else l.removeContent(),l.setContentCards(e.getAttribute("data-number"))}))})),document.querySelector(".title").addEventListener("click",(function(){l.setTitleCards(),document.querySelector(".navigation-item.active").classList.remove("active"),document.querySelector(".navigation-item:first-child").classList.add("active")})),document.addEventListener("DOMContentLoaded",(function(){fetch("./assets/json/cards.json").then((function(e){return e.json()})).then((function(e){!function(e){for(var t=0;t<e.length;t+=1)(new Image).src="./".concat(e[t])}(e.flat().map((function(e){return e.image})))}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lbmdsaXNoLWZvci1raWRzLy4vc3JjL2pzL2NvbXBvbmVudHMvdGl0bGUtY2FyZC5qcyIsIndlYnBhY2s6Ly9lbmdsaXNoLWZvci1raWRzLy4vc3JjL2pzL2NvbXBvbmVudHMvc3dpdGNoLmpzIiwid2VicGFjazovL2VuZ2xpc2gtZm9yLWtpZHMvLi9zcmMvanMvcGxheS1nYW1lLmpzIiwid2VicGFjazovL2VuZ2xpc2gtZm9yLWtpZHMvLi9zcmMvanMvc3RhdGlzdGljcy5qcyIsIndlYnBhY2s6Ly9lbmdsaXNoLWZvci1raWRzLy4vc3JjL2pzL2NvbXBvbmVudHMvY2FyZC5qcyIsIndlYnBhY2s6Ly9lbmdsaXNoLWZvci1raWRzLy4vc3JjL2pzL2dhbWUtZmllbGQuanMiLCJ3ZWJwYWNrOi8vZW5nbGlzaC1mb3Ita2lkcy8uL3NyYy9qcy9jb21wb25lbnRzL2J1cmdlci1pY29uLmpzIiwid2VicGFjazovL2VuZ2xpc2gtZm9yLWtpZHMvLi9zcmMvanMvYnVyZ2VyLW1lbnUuanMiLCJ3ZWJwYWNrOi8vZW5nbGlzaC1mb3Ita2lkcy8uL3NyYy9qcy9pbmRleC5qcyJdLCJuYW1lcyI6WyJUaXRsZUNhcmQiLCJpbWFnZSIsInRpdGxlIiwibnVtYmVyIiwidGhpcyIsIlN3aXRjaGVyIiwic3RhcnRHYW1lQnV0dG9uIiwiYm94U3RhcnMiLCJjdXJyZW50V29yZHMiLCJjb3JyZWN0QW5zd2VyIiwid3JvbmdBbnN3ZXIiLCJzb3VuZFdpbiIsInNvdW5kTG9zZSIsInJlcGVhdCIsImN1cnJlbnRXb3JkIiwibWlzdGFrZXMiLCJ3b3Jkc1VzZWQiLCJyZXBlYXRNb2RlIiwiaW5pdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCIsImlubmVyVGV4dCIsIkF1ZGlvIiwicXVlcnlTZWxlY3RvciIsImFwcGVuZENoaWxkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInBsYXkiLCJjdXJyZW50Q2FyZHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsImNhcmQiLCJwdXNoIiwiZ2V0QXR0cmlidXRlIiwic29ydCIsIk1hdGgiLCJyYW5kb20iLCJwbGF5V29yZCIsImxvYWQiLCJzdGF0aXN0aWNzIiwic3R5bGUiLCJmaWx0ZXIiLCJ3aW5TdGFycyIsInNyYyIsInJlbW92ZSIsImxlbmd0aCIsInNldFRpbWVvdXQiLCJmaW5pc2hHYW1lIiwiaW5jbHVkZXMiLCJzcGFuIiwiZ2FtZUZpZWxkIiwiY29udGFpbmVyIiwiZmluaXNoU2NyZWVuIiwiaW5uZXJIVE1MIiwiYnV0dG9uc0ZpbmlzaCIsIm5ld0dhbWVCdXR0b24iLCJtYWluTWVudUJ1dHRvbiIsImZldGNoIiwidGhlbiIsInJlc3VsdCIsImpzb24iLCJhbGxXb3JkcyIsImZsYXQiLCJjb21tb25BcnJheSIsIml0ZW0iLCJjdXJyZW50T2JqIiwid29yZCIsInRyYW5zbGF0aW9uIiwiY2F0ZWdvcnkiLCJjbGlja3MiLCJjb3JyZWN0Iiwid3JvbmciLCJwZXJjZW50IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb3VudGluZ1N0YXRpc3RpY3MiLCJzdGF0IiwicGFyc2UiLCJnZXRJdGVtIiwiYnVpbGRpbmdUYWJsZSIsImRhdGEiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJzdGF0Q29udGFpbmVyIiwiYnV0dG9ucyIsInJlcGVhdEJ1dHRvbiIsInJlc2V0QnV0dG9uIiwidGFibGUiLCJyZXNldExvY2FsU3RvcmFnZSIsInJlcGVhdERpZmZpY3VsdFdvcmRzIiwicm93IiwidG9GaXhlZCIsImhlYWRpbmciLCJzb3J0Q29sdW1uIiwic2xpY2UiLCJzb3J0T2JqZWN0Iiwib2JqIiwia2V5IiwiYSIsImIiLCJkaXJlY3RPcmRlciIsImFycm93IiwiZGF0YUZvclRhYmxlIiwidG9Mb3dlckNhc2UiLCJtYXRjaCIsInJldmVyc2UiLCJwbGF5R2FtZSIsIndyYXBwZXIiLCJjYXJkc0NvbnRhaW5lciIsImNsaWNrIiwicmVuZGVyIiwiaSIsIkNhcmQiLCJpbnB1dCIsInRvZ2dsZSIsImNhcmRzIiwiY2hlY2tlZCIsImhlaWdodCIsInJlc2V0QXJyYXkiLCJtYXAiLCJjYXJkRnJvbnQiLCJjYXJkQmFjayIsInJhbmRvbVJvdGF0ZSIsInNldEF0dHJpYnV0ZSIsImNhcmRGcm9udEltYWdlIiwiaW1nRnJvbnQiLCJjYXJkRnJvbnROYW1lIiwiZ2FtZU1vZGUiLCJldmVudCIsInRhcmdldCIsImNvbnRhaW5zIiwidG9Wb2ljZSIsImNhcmRCdXR0b24iLCJyZXZlcnNlQ2FyZCIsImNhcmRCYWNrSW1hZ2UiLCJpbWciLCJjYXJkQmFja05hbWUiLCJhdWRpbyIsInRyYW5zZm9ybSIsImFjdGl2ZUNhcmQiLCIwIiwiMSIsIjIiLCIzIiwiNCIsIjUiLCI2IiwiNyIsImltYWdlcyIsInNldFRpdGxlQ2FyZHMiLCJyZW1vdmVDb250ZW50Iiwic2V0Q29udGVudENhcmRzIiwiY3VycmVudENvbnRlbnQiLCJtb2RhbFdpbmRvdyIsIm5hdmlnYXRpb25JdGVtcyIsImJ1cmdlckljb24iLCJidXJnZXJCb3giLCJidXR0b25PZmYiLCJjbGFzc05hbWUiLCJmaXJzdExJbmUiLCJzZWNvbmRMaW5lIiwidGhpcmRMaW5lIiwicHJlcGVuZCIsImxpbmsiLCJhcnIiLCJJbWFnZSIsInByZWxvYWRJbWFnZXMiXSwibWFwcGluZ3MiOiJtTUFBcUJBLEUsV0FDbkIsV0FBWUMsRUFBT0MsRUFBT0MsSSw0RkFBUSxTQUNoQ0MsS0FBS0gsTUFBUUEsRUFDYkcsS0FBS0YsTUFBUUEsRUFDYkUsS0FBS0QsT0FBU0EsRSwyQ0FHaEIsV0FNRSxNQUxhLGtDQUFILE9BQXFDQyxLQUFLRCxPQUExQyx3REFDNkJDLEtBQUtILE1BRGxDLG9EQUVtQkcsS0FBS0YsTUFGeEIsNEIsZ01DUk9HLEUsd0tBQ25CLFdBU0UsTUFSZ0IsMlEseUNDeUpwQixRQXZKaUIsQ0FDZkMsZ0JBQWlCLEtBQ2pCQyxTQUFVLEtBQ1ZDLGFBQWMsR0FDZEMsY0FBZSxLQUNmQyxZQUFhLEtBQ2JDLFNBQVUsS0FD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Y2xhc3MgVGl0bGVDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihpbWFnZSwgdGl0bGUsIG51bWJlcikge1xyXG4gICAgdGhpcy5pbWFnZSA9IGltYWdlO1xyXG4gICAgdGhpcy50aXRsZSA9IHRpdGxlO1xyXG4gICAgdGhpcy5udW1iZXIgPSBudW1iZXI7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICBjb25zdCBjYXJkID0gYDxkaXYgY2xhc3M9XCJjYXJkXCIgZGF0YS1udW1iZXI9XCIke3RoaXMubnVtYmVyfVwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwiY2FyZF9faW1hZ2VcIj48aW1nIHNyYz1cIiR7dGhpcy5pbWFnZX1cIj48L2Rpdj5cclxuICAgICAgPHNwYW4gY2xhc3M9XCJjYXJkX19uYW1lXCI+JHt0aGlzLnRpdGxlfTwvc3Bhbj5cclxuICAgIDwvZGl2PmA7XHJcblxyXG4gICAgcmV0dXJuIGNhcmQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFN3aXRjaGVyIHtcclxuICBzdGF0aWMgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgZWxlbWVudCA9IGA8ZGl2IGNsYXNzPVwic3dpdGNoLWNvbnRhaW5lclwiPlxyXG4gICAgICA8ZGl2IGNsYXNzPVwidHJhaW4tbW9kZSBhY3RpdmUtbW9kZVwiPlRyYWluPC9kaXY+XHJcbiAgICAgIDxsYWJlbCBjbGFzcz1cInN3aXRjaFwiPlxyXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIj5cclxuICAgICAgICA8c3BhbiBjbGFzcz1cInNsaWRlciByb3VuZFwiPjwvc3Bhbj5cclxuICAgICAgPC9sYWJlbD5cclxuICAgICAgPGRpdiBjbGFzcz1cImdhbWUtbW9kZVwiPlBsYXk8L2Rpdj5cclxuICAgIDwvZGl2PmA7XHJcbiAgICByZXR1cm4gZWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cclxuaW1wb3J0IHN0YXRpc3RpY3MgZnJvbSAnLi9zdGF0aXN0aWNzJztcclxuaW1wb3J0IGdhbWVGaWVsZCBmcm9tICcuL2dhbWUtZmllbGQnO1xyXG5cclxuY29uc3QgcGxheUdhbWUgPSB7XHJcbiAgc3RhcnRHYW1lQnV0dG9uOiBudWxsLFxyXG4gIGJveFN0YXJzOiBudWxsLFxyXG4gIGN1cnJlbnRXb3JkczogW10sXHJcbiAgY29ycmVjdEFuc3dlcjogbnVsbCxcclxuICB3cm9uZ0Fuc3dlcjogbnVsbCxcclxuICBzb3VuZFdpbjogbnVsbCxcclxuICBzb3VuZExvc2U6IG51bGwsXHJcbiAgcmVwZWF0OiBudWxsLFxyXG4gIGN1cnJlbnRXb3JkOiBudWxsLFxyXG4gIG1pc3Rha2VzOiAwLFxyXG4gIHdvcmRzVXNlZDogW10sXHJcbiAgcmVwZWF0TW9kZTogZmFsc2UsXHJcblxyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLnJlcGVhdCA9IGZhbHNlO1xyXG4gICAgdGhpcy5jdXJyZW50V29yZHMgPSBbXTtcclxuICAgIHRoaXMuY3VycmVudFdvcmQgPSBudWxsO1xyXG4gICAgdGhpcy53b3Jkc1VzZWQgPSBbXTtcclxuXHJcbiAgICB0aGlzLnN0YXJ0R2FtZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgdGhpcy5zdGFydEdhbWVCdXR0b24uY2xhc3NMaXN0LmFkZCgnYnV0dG9uLXBsYXknKTtcclxuICAgIHRoaXMuc3RhcnRHYW1lQnV0dG9uLmlubmVyVGV4dCA9ICdTdGFydCBnYW1lJztcclxuXHJcbiAgICB0aGlzLmJveFN0YXJzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmJveFN0YXJzLmNsYXNzTGlzdC5hZGQoJ2JveC1zdGFycycpO1xyXG5cclxuICAgIHRoaXMuY29ycmVjdEFuc3dlciA9IG5ldyBBdWRpbygnLi9hc3NldHMvc291bmRzL2NvcnJlY3QubXAzJyk7XHJcbiAgICB0aGlzLndyb25nQW5zd2VyID0gbmV3IEF1ZGlvKCcuL2Fzc2V0cy9zb3VuZHMvZXJyb3IubXAzJyk7XHJcbiAgICB0aGlzLnNvdW5kV2luID0gbmV3IEF1ZGlvKCcuL2Fzc2V0cy9zb3VuZHMvc3VjY2Vzcy5tcDMnKTtcclxuICAgIHRoaXMuc291bmRMb3NlID0gbmV3IEF1ZGlvKCcuL2Fzc2V0cy9zb3VuZHMvZmFpbHVyZS5tcDMnKTtcclxuXHJcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGFpbmVyIC53cmFwcGVyJykuYXBwZW5kQ2hpbGQodGhpcy5zdGFydEdhbWVCdXR0b24pO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lciAud3JhcHBlcicpLmFwcGVuZENoaWxkKHRoaXMuYm94U3RhcnMpO1xyXG5cclxuICAgIHRoaXMuc3RhcnRHYW1lQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICBpZiAodGhpcy5yZXBlYXQpIHtcclxuICAgICAgICB0aGlzLmN1cnJlbnRXb3JkLnBsYXkoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnN0YXJ0R2FtZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdyZXBlYXQnKTtcclxuICAgICAgICB0aGlzLnJlcGVhdCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5wbGF5KCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIHBsYXkoKSB7XHJcbiAgICBjb25zdCBjdXJyZW50Q2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2FyZC13b3JkX19mcm9udCcpO1xyXG4gICAgY3VycmVudENhcmRzLmZvckVhY2goKGNhcmQpID0+IHtcclxuICAgICAgdGhpcy5jdXJyZW50V29yZHMucHVzaChjYXJkLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJykpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLmN1cnJlbnRXb3Jkcy5zb3J0KCgpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpO1xyXG5cclxuICAgIGxldCBjdXJyZW50V29yZCA9IDA7XHJcblxyXG4gICAgY29uc3QgcGxheVdvcmQgPSAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY3VycmVudFdvcmQgPSBuZXcgQXVkaW8oYC4vYXNzZXRzL3NvdW5kcy8ke3RoaXMuY3VycmVudFdvcmRzW2N1cnJlbnRXb3JkXX0ubXAzYCk7XHJcbiAgICAgIHRoaXMuY3VycmVudFdvcmQubG9hZCgpO1xyXG4gICAgICB0aGlzLmN1cnJlbnRXb3JkLnBsYXkoKTtcclxuICAgIH07XHJcblxyXG4gICAgcGxheVdvcmQoKTtcclxuXHJcbiAgICBjdXJyZW50Q2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xyXG4gICAgICBjYXJkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgIGlmIChjYXJkLmdldEF0dHJpYnV0ZSgnZGF0YS1uYW1lJykgPT09IHRoaXMuY3VycmVudFdvcmRzW2N1cnJlbnRXb3JkXSkge1xyXG4gICAgICAgICAgdGhpcy53b3Jkc1VzZWQucHVzaCh0aGlzLmN1cnJlbnRXb3Jkc1tjdXJyZW50V29yZF0pO1xyXG4gICAgICAgICAgc3RhdGlzdGljcy5jb3VudGluZ1N0YXRpc3RpY3ModGhpcy5jdXJyZW50V29yZHNbY3VycmVudFdvcmRdLCAnY29ycmVjdCcpO1xyXG4gICAgICAgICAgdGhpcy5jb3JyZWN0QW5zd2VyLnBsYXkoKTtcclxuICAgICAgICAgIGNhcmQuc3R5bGUuZmlsdGVyID0gJ2JsdXIoNXB4KSc7XHJcblxyXG4gICAgICAgICAgY29uc3Qgd2luU3RhcnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuICAgICAgICAgIHdpblN0YXJzLnNyYyA9ICcuL2Fzc2V0cy9pY29ucy9zdGFyLXdpbi5zdmcnO1xyXG4gICAgICAgICAgdGhpcy5ib3hTdGFycy5hcHBlbmRDaGlsZCh3aW5TdGFycyk7XHJcblxyXG4gICAgICAgICAgY29uc3QgYWN0aXZlQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC5jYXJkLXdvcmQ6bnRoLWNoaWxkKCR7K2NhcmQuZ2V0QXR0cmlidXRlKCdkYXRhLW51bWJlcicpICsgMX0pYCk7XHJcbiAgICAgICAgICBhY3RpdmVDYXJkLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZS1jYXJkJyk7XHJcblxyXG4gICAgICAgICAgY3VycmVudFdvcmQgKz0gMTtcclxuICAgICAgICAgIGlmIChjdXJyZW50V29yZCA8IHRoaXMuY3VycmVudFdvcmRzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KHBsYXlXb3JkLCA1MDApO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgdGhpcy5maW5pc2hHYW1lKCk7XHJcbiAgICAgICAgICAgIH0sIDEwMDApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoIXRoaXMud29yZHNVc2VkLmluY2x1ZGVzKGNhcmQuZ2V0QXR0cmlidXRlKCdkYXRhLW5hbWUnKSkpIHtcclxuICAgICAgICAgIHN0YXRpc3RpY3MuY291bnRpbmdTdGF0aXN0aWNzKHRoaXMuY3VycmVudFdvcmRzW2N1cnJlbnRXb3JkXSwgJ3dyb25nJyk7XHJcbiAgICAgICAgICB0aGlzLm1pc3Rha2VzICs9IDE7XHJcbiAgICAgICAgICBjb25zdCB3aW5TdGFycyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG4gICAgICAgICAgd2luU3RhcnMuc3JjID0gJy4vYXNzZXRzL2ljb25zL3N0YXIuc3ZnJztcclxuICAgICAgICAgIHRoaXMuYm94U3RhcnMuYXBwZW5kQ2hpbGQod2luU3RhcnMpO1xyXG5cclxuICAgICAgICAgIHRoaXMud3JvbmdBbnN3ZXIucGxheSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICBmaW5pc2hHYW1lKCkge1xyXG4gICAgZ2FtZUZpZWxkLnJlbW92ZUNvbnRlbnQoKTtcclxuXHJcbiAgICBsZXQgc3BhbjtcclxuICAgIGxldCBzcmM7XHJcbiAgICBpZiAodGhpcy5taXN0YWtlcyA9PT0gMCkge1xyXG4gICAgICBzcGFuID0gJ0NvbmdyYXR1bGF0aW9ucyEgWW91IHdpbiEnO1xyXG4gICAgICBzcmMgPSAnLi9hc3NldHMvaWNvbnMvc3VjY2Vzcy5zdmcnO1xyXG4gICAgICB0aGlzLnNvdW5kV2luLnBsYXkoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHNwYW4gPSBgWW91IGxvc3QoOiBUcmFpbiBhbmQgdHJ5IGFnYWluITwvYnI+XHJcbiAgICAgICAgWW91IG1hZGUgJHt0aGlzLm1pc3Rha2VzfSBtaXN0YWtlKHMpLmA7XHJcbiAgICAgIHNyYyA9ICcuL2Fzc2V0cy9pY29ucy9mYWlsdXJlLnN2Zyc7XHJcbiAgICAgIHRoaXMuc291bmRMb3NlLnBsYXkoKTtcclxuICAgIH1cclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXInKTtcclxuICAgIGNvbnN0IGZpbmlzaFNjcmVlbiA9IGA8c3BhbiBjbGFzcz1cIndpbi10aXRsZVwiPiR7c3Bhbn08L3NwYW4+XHJcbiAgICA8ZGl2IGNsYXNzPVwid2luLWltYWdlXCI+PGltZyBzcmM9XCIke3NyY31cIj48L2Rpdj5gO1xyXG4gICAgY29udGFpbmVyLmlubmVySFRNTCArPSBmaW5pc2hTY3JlZW47XHJcblxyXG4gICAgY29uc3QgYnV0dG9uc0ZpbmlzaCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgYnV0dG9uc0ZpbmlzaC5jbGFzc0xpc3QuYWRkKCdidXR0b25zLWZpbmlzaCcpO1xyXG4gICAgY29uc3QgbmV3R2FtZUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgbmV3R2FtZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCduZXctZ2FtZScpO1xyXG4gICAgbmV3R2FtZUJ1dHRvbi5pbm5lclRleHQgPSAnTmV3IGdhbWUnO1xyXG4gICAgY29uc3QgbWFpbk1lbnVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgIG1haW5NZW51QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ21haW4tbWVudScpO1xyXG4gICAgbWFpbk1lbnVCdXR0b24uaW5uZXJUZXh0ID0gJ01haW4gbWVudSc7XHJcbiAgICBidXR0b25zRmluaXNoLmFwcGVuZENoaWxkKG5ld0dhbWVCdXR0b24pO1xyXG4gICAgYnV0dG9uc0ZpbmlzaC5hcHBlbmRDaGlsZChtYWluTWVudUJ1dHRvbik7XHJcblxyXG4gICAgbmV3R2FtZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgaWYgKHRoaXMucmVwZWF0TW9kZSkge1xyXG4gICAgICAgIHN0YXRpc3RpY3MucmVwZWF0RGlmZmljdWx0V29yZHMoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBnYW1lRmllbGQuc2V0Q29udGVudENhcmRzKGdhbWVGaWVsZC5hY3RpdmVDYXJkKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgbWFpbk1lbnVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMucmVwZWF0TW9kZSA9IGZhbHNlO1xyXG4gICAgICBnYW1lRmllbGQuc2V0VGl0bGVDYXJkcygpO1xyXG5cclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdmlnYXRpb24taXRlbS5hY3RpdmUnKS5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcclxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm5hdmlnYXRpb24taXRlbTpmaXJzdC1jaGlsZCcpLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbnNGaW5pc2gpO1xyXG4gICAgdGhpcy5taXN0YWtlcyA9IDA7XHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHBsYXlHYW1lO1xyXG4iLCIvKiBlc2xpbnQtZGlzYWJsZSBuby1wYXJhbS1yZWFzc2lnbiAqL1xyXG5pbXBvcnQgQ2FyZCBmcm9tICcuL2NvbXBvbmVudHMvY2FyZCc7XHJcbmltcG9ydCBTd2l0Y2hlciBmcm9tICcuL2NvbXBvbmVudHMvc3dpdGNoJztcclxuaW1wb3J0IHBsYXlHYW1lIGZyb20gJy4vcGxheS1nYW1lJztcclxuXHJcbmNvbnN0IHN0YXRpc3RpY3MgPSB7XHJcbiAgaW5pdCgpIHtcclxuICAgIGZldGNoKCcuL2Fzc2V0cy9qc29uL2NhcmRzLmpzb24nKVxyXG4gICAgICAudGhlbigocmVzdWx0KSA9PiByZXN1bHQuanNvbigpKVxyXG4gICAgICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgY29uc3QgYWxsV29yZHMgPSByZXN1bHQuZmxhdCgpO1xyXG4gICAgICAgIGNvbnN0IGNvbW1vbkFycmF5ID0gW107XHJcbiAgICAgICAgYWxsV29yZHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgICAgY29uc3QgY3VycmVudE9iaiA9IHtcclxuICAgICAgICAgICAgd29yZDogaXRlbS53b3JkLFxyXG4gICAgICAgICAgICB0cmFuc2xhdGlvbjogaXRlbS50cmFuc2xhdGlvbixcclxuICAgICAgICAgICAgY2F0ZWdvcnk6IGl0ZW0uY2F0ZWdvcnksXHJcbiAgICAgICAgICAgIGNsaWNrczogMCxcclxuICAgICAgICAgICAgY29ycmVjdDogMCxcclxuICAgICAgICAgICAgd3Jvbmc6IDAsXHJcbiAgICAgICAgICAgIHBlcmNlbnQ6IDAsXHJcbiAgICAgICAgICAgIGltYWdlOiBpdGVtLmltYWdlLFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgIGNvbW1vbkFycmF5LnB1c2goY3VycmVudE9iaik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2VuZ2xpc2gtZm9yLWtpZHMnLCBgJHtKU09OLnN0cmluZ2lmeShjb21tb25BcnJheSl9YCk7XHJcbiAgICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIGNvdW50aW5nU3RhdGlzdGljcyh3b3JkLCBjYXRlZ29yeSkge1xyXG4gICAgY29uc3Qgc3RhdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VuZ2xpc2gtZm9yLWtpZHMnKSk7XHJcbiAgICBzdGF0LmZvckVhY2goKGl0ZW0pID0+IHtcclxuICAgICAgaWYgKGl0ZW0ud29yZCA9PT0gd29yZCkge1xyXG4gICAgICAgIHN3aXRjaCAoY2F0ZWdvcnkpIHtcclxuICAgICAgICAgIGNhc2UgJ2NsaWNrcyc6XHJcbiAgICAgICAgICAgIGl0ZW0uY2xpY2tzICs9IDE7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnY29ycmVjdCc6XHJcbiAgICAgICAgICAgIGl0ZW0uY29ycmVjdCArPSAxO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGNhc2UgJ3dyb25nJzpcclxuICAgICAgICAgICAgaXRlbS53cm9uZyArPSAxO1xyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXRlbS53cm9uZyArIGl0ZW0uY29ycmVjdCA+IDApIHtcclxuICAgICAgICAgIGl0ZW0ucGVyY2VudCA9IChpdGVtLndyb25nICogMTAwKSAvIChpdGVtLndyb25nICsgaXRlbS5jb3JyZWN0KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2VuZ2xpc2gtZm9yLWtpZHMnLCBgJHtKU09OLnN0cmluZ2lmeShzdGF0KX1gKTtcclxuICB9LFxyXG5cclxuICBidWlsZGluZ1RhYmxlKGRhdGEpIHtcclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXInKTtcclxuICAgIHdoaWxlIChjb250YWluZXIuZmlyc3RDaGlsZCkge1xyXG4gICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmZpcnN0Q2hpbGQpO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IHN0YXRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHN0YXRDb250YWluZXIuY2xhc3NMaXN0LmFkZCgnd3JhcHBlcicpO1xyXG5cclxuICAgIGNvbnN0IGJ1dHRvbnMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGJ1dHRvbnMuY2xhc3NMaXN0LmFkZCgncGFuZWwtYnV0dG9ucycpO1xyXG5cclxuICAgIGNvbnN0IHJlcGVhdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xyXG4gICAgcmVwZWF0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3JlcGVhdC1idXR0b24nKTtcclxuICAgIHJlcGVhdEJ1dHRvbi5pbm5lclRleHQgPSAnUmVwZWF0IGRpZmZpY3VsdCB3b3Jkcyc7XHJcblxyXG4gICAgY29uc3QgcmVzZXRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgIHJlc2V0QnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3Jlc2V0LWJ1dHRvbicpO1xyXG4gICAgcmVzZXRCdXR0b24uaW5uZXJUZXh0ID0gJ1Jlc2V0JztcclxuXHJcbiAgICBidXR0b25zLmFwcGVuZENoaWxkKHJlcGVhdEJ1dHRvbik7XHJcbiAgICBidXR0b25zLmFwcGVuZENoaWxkKHJlc2V0QnV0dG9uKTtcclxuXHJcbiAgICBjb25zdCB0YWJsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RhYmxlJyk7XHJcbiAgICB0YWJsZS5jbGFzc0xpc3QuYWRkKCd0YWJsZScpO1xyXG5cclxuICAgIC8vIGFkZCBlbGVtZW50cyB0byBwYWdlXHJcbiAgICBzdGF0Q29udGFpbmVyLmFwcGVuZENoaWxkKGJ1dHRvbnMpO1xyXG4gICAgc3RhdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0YWJsZSk7XHJcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdENvbnRhaW5lcik7XHJcblxyXG4gICAgcmVzZXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMucmVzZXRMb2NhbFN0b3JhZ2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJlcGVhdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5yZXBlYXREaWZmaWN1bHRXb3JkcygpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gcmVuZGVyaW5nIHRhYmxlXHJcbiAgICB0YWJsZS5pbm5lckhUTUwgPSBgPHRyPlxyXG4gICAgICA8dGg+V29yZDwvdGg+XHJcbiAgICAgIDx0aD5UcmFuc2xhdGlvbjwvdGg+XHJcbiAgICAgIDx0aD5DYXRlZ29yeTwvdGg+XHJcbiAgICAgIDx0aD5DbGlja3M8L3RoPlxyXG4gICAgICA8dGg+Q29ycmVjdDwvdGg+XHJcbiAgICAgIDx0aD5Xcm9uZzwvdGg+XHJcbiAgICAgIDx0aD4lIGVycm9yczwvdGg+XHJcbiAgICA8L3RyPmA7XHJcbiAgICBkYXRhLmZvckVhY2goKHJvdykgPT4ge1xyXG4gICAgICB0YWJsZS5pbm5lckhUTUwgKz0gYDx0cj5cclxuICAgICAgICA8dGQ+JHtyb3cud29yZH08L3RkPlxyXG4gICAgICAgIDx0ZD4ke3Jvdy50cmFuc2xhdGlvbn08L3RkPlxyXG4gICAgICAgIDx0ZD4ke3Jvdy5jYXRlZ29yeX08L3RkPlxyXG4gICAgICAgIDx0ZD4ke3Jvdy5jbGlja3N9PC90ZD5cclxuICAgICAgICA8dGQ+JHtyb3cuY29ycmVjdH08L3RkPlxyXG4gICAgICAgIDx0ZD4ke3Jvdy53cm9uZ308L3RkPlxyXG4gICAgICAgIDx0ZD4ke3Jvdy5wZXJjZW50LnRvRml4ZWQoMSl9PC90ZD5cclxuICAgICAgPC90cj5gO1xyXG4gICAgfSk7XHJcblxyXG4gICAgY29uc3QgdGFibGVIZWFkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgndGgnKTtcclxuICAgIHRhYmxlSGVhZC5mb3JFYWNoKChoZWFkaW5nKSA9PiB7XHJcbiAgICAgIGhlYWRpbmcuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgaWYgKGhlYWRpbmcuaW5uZXJUZXh0WzBdID09PSAn4oaTJykge1xyXG4gICAgICAgICAgdGhpcy5zb3J0Q29sdW1uKGhlYWRpbmcuaW5uZXJUZXh0LnNsaWNlKDIpLCBmYWxzZSk7XHJcbiAgICAgICAgfSBlbHNlIGlmIChoZWFkaW5nLmlubmVyVGV4dFswXSA9PT0gJ+KGkScpIHtcclxuICAgICAgICAgIHRoaXMuc29ydENvbHVtbihoZWFkaW5nLmlubmVyVGV4dC5zbGljZSgyKSwgdHJ1ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHRoaXMuc29ydENvbHVtbihoZWFkaW5nLmlubmVyVGV4dCwgdHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIHNvcnRPYmplY3Qob2JqLCBrZXkgPSAnd29yZCcpIHtcclxuICAgIG9iai5zb3J0KChhLCBiKSA9PiB7XHJcbiAgICAgIGlmIChhW2Ake2tleX1gXSA+IGJbYCR7a2V5fWBdKSB7XHJcbiAgICAgICAgcmV0dXJuIDE7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGFbYCR7a2V5fWBdIDwgYltgJHtrZXl9YF0pIHtcclxuICAgICAgICByZXR1cm4gLTE7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIDA7XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gb2JqO1xyXG4gIH0sXHJcblxyXG4gIHNvcnRDb2x1bW4oa2V5LCBkaXJlY3RPcmRlcikge1xyXG4gICAgY29uc3Qgc3RhdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VuZ2xpc2gtZm9yLWtpZHMnKSk7XHJcbiAgICBpZiAoa2V5ID09PSAnJSBlcnJvcnMnKSB7XHJcbiAgICAgIGtleSA9ICdwZXJjZW50JztcclxuICAgIH1cclxuICAgIGNvbnN0IGRhdGFGb3JUYWJsZSA9IHRoaXMuc29ydE9iamVjdChzdGF0LCBrZXkudG9Mb3dlckNhc2UoKSk7XHJcblxyXG4gICAgbGV0IGFycm93O1xyXG4gICAgaWYgKGRpcmVjdE9yZGVyICYmIGtleS5tYXRjaCgvV29yZHxUcmFuc2xhdGlvbnxDYXRlZ29yeS8pKSB7XHJcbiAgICAgIGFycm93ID0gJyZkYXJyOyc7XHJcbiAgICAgIHRoaXMuYnVpbGRpbmdUYWJsZShkYXRhRm9yVGFibGUpO1xyXG4gICAgfSBlbHNlIGlmIChrZXkubWF0Y2goL1dvcmR8VHJhbnNsYXRpb258Q2F0ZWdvcnkvKSkge1xyXG4gICAgICBhcnJvdyA9ICcmdWFycjsnO1xyXG4gICAgICB0aGlzLmJ1aWxkaW5nVGFibGUoZGF0YUZvclRhYmxlLnJldmVyc2UoKSk7XHJcbiAgICB9IGVsc2UgaWYgKGRpcmVjdE9yZGVyKSB7XHJcbiAgICAgIGFycm93ID0gJyZkYXJyOyc7XHJcbiAgICAgIHRoaXMuYnVpbGRpbmdUYWJsZShkYXRhRm9yVGFibGUucmV2ZXJzZSgpKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGFycm93ID0gJyZ1YXJyOyc7XHJcbiAgICAgIHRoaXMuYnVpbGRpbmdUYWJsZShkYXRhRm9yVGFibGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCB0aXRsZTtcclxuICAgIHN3aXRjaCAoa2V5KSB7XHJcbiAgICAgIGNhc2UgJ1dvcmQnOlxyXG4gICAgICAgIHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndGg6Zmlyc3QtY2hpbGQnKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgY2FzZSAnVHJhbnNsYXRpb24nOlxyXG4gICAgICAgIHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndGg6bnRoLWNoaWxkKDIpJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ0NhdGVnb3J5JzpcclxuICAgICAgICB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RoOm50aC1jaGlsZCgzKScpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdDbGlja3MnOlxyXG4gICAgICAgIHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndGg6bnRoLWNoaWxkKDQpJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ0NvcnJlY3QnOlxyXG4gICAgICAgIHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigndGg6bnRoLWNoaWxkKDUpJyk7XHJcbiAgICAgICAgYnJlYWs7XHJcbiAgICAgIGNhc2UgJ1dyb25nJzpcclxuICAgICAgICB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RoOm50aC1jaGlsZCg2KScpO1xyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgICBjYXNlICdwZXJjZW50JzpcclxuICAgICAgICB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RoOmxhc3QtY2hpbGQnKTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICAgIHRpdGxlLmlubmVySFRNTCA9IGAke2Fycm93fSAke3RpdGxlLmlubmVySFRNTH1gO1xyXG4gIH0sXHJcblxyXG4gIHJlcGVhdERpZmZpY3VsdFdvcmRzKCkge1xyXG4gICAgcGxheUdhbWUucmVwZWF0TW9kZSA9IHRydWU7XHJcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGFpbmVyJyk7XHJcbiAgICB3aGlsZSAoY29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcclxuICAgICAgY29udGFpbmVyLnJlbW92ZUNoaWxkKGNvbnRhaW5lci5maXJzdENoaWxkKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHdyYXBwZXIuY2xhc3NMaXN0LmFkZCgnd3JhcHBlcicpO1xyXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHdyYXBwZXIpO1xyXG5cclxuICAgIGNvbnN0IGNhcmRzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjYXJkc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjYXJkcycpO1xyXG5cclxuICAgIGNvbnN0IHN0YXQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlbmdsaXNoLWZvci1raWRzJykpO1xyXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuc29ydE9iamVjdChzdGF0LCAnd3JvbmcnKS5yZXZlcnNlKCk7XHJcbiAgICBpZiAoZGF0YVswXS53cm9uZyA9PT0gMCkge1xyXG4gICAgICB3cmFwcGVyLmlubmVySFRNTCArPSAnPGRpdiBjbGFzcz1cInN1YnRpdGxlXCI+VGhlcmUgYXJlIG5vIHdvcmRzIGhlcmUgeWV0IDotKTwvZGl2Pic7XHJcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aXRsZScpLmNsaWNrKCk7XHJcbiAgICAgIH0sIDIwMDApO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgd3JhcHBlci5pbm5lckhUTUwgKz0gU3dpdGNoZXIucmVuZGVyKCk7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgODsgaSArPSAxKSB7XHJcbiAgICAgICAgaWYgKGRhdGFbaV0ud3JvbmcgIT09IDApIHtcclxuICAgICAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChkYXRhW2ldLmltYWdlLCBkYXRhW2ldLndvcmQsIGRhdGFbaV0udHJhbnNsYXRpb24sIGkpO1xyXG4gICAgICAgICAgY2FyZHNDb250YWluZXIuYXBwZW5kQ2hpbGQoY2FyZC5yZW5kZXIoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoY2FyZHNDb250YWluZXIpO1xyXG5cclxuICAgICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCAoKSA9PiB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRyYWluLW1vZGUnKS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUtbW9kZScpO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYW1lLW1vZGUnKS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUtbW9kZScpO1xyXG4gICAgICAgIGNvbnN0IGNhcmRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNhcmQtd29yZF9fZnJvbnQtaW1hZ2UnKTtcclxuICAgICAgICBpZiAoaW5wdXQuY2hlY2tlZCkge1xyXG4gICAgICAgICAgY2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xyXG4gICAgICAgICAgICBjYXJkLnN0eWxlLmhlaWdodCA9ICcyNjBweCc7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIHBsYXlHYW1lLmluaXQoKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xyXG4gICAgICAgICAgICBjYXJkLnN0eWxlLmhlaWdodCA9ICcyMDBweCc7XHJcbiAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29udGFpbmVyIC53cmFwcGVyJykucmVtb3ZlQ2hpbGQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1wbGF5JykpO1xyXG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lciAud3JhcHBlcicpLnJlbW92ZUNoaWxkKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib3gtc3RhcnMnKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9LFxyXG5cclxuICByZXNldExvY2FsU3RvcmFnZSgpIHtcclxuICAgIGNvbnN0IHN0YXQgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdlbmdsaXNoLWZvci1raWRzJykpO1xyXG4gICAgY29uc3QgcmVzZXRBcnJheSA9IHN0YXQubWFwKChpdGVtKSA9PiAoe1xyXG4gICAgICB3b3JkOiBpdGVtLndvcmQsXHJcbiAgICAgIHRyYW5zbGF0aW9uOiBpdGVtLnRyYW5zbGF0aW9uLFxyXG4gICAgICBjYXRlZ29yeTogaXRlbS5jYXRlZ29yeSxcclxuICAgICAgY2xpY2tzOiAwLFxyXG4gICAgICBjb3JyZWN0OiAwLFxyXG4gICAgICB3cm9uZzogMCxcclxuICAgICAgcGVyY2VudDogMCxcclxuICAgICAgaW1hZ2U6IGl0ZW0uaW1hZ2UsXHJcbiAgICB9KSk7XHJcbiAgICB0aGlzLmJ1aWxkaW5nVGFibGUodGhpcy5zb3J0T2JqZWN0KHJlc2V0QXJyYXkpKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdlbmdsaXNoLWZvci1raWRzJywgYCR7SlNPTi5zdHJpbmdpZnkocmVzZXRBcnJheSl9YCk7XHJcbiAgfSxcclxufTtcclxuXHJcbmlmICghbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VuZ2xpc2gtZm9yLWtpZHMnKSkge1xyXG4gIHN0YXRpc3RpY3MuaW5pdCgpO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdGF0aXN0aWNzO1xyXG4iLCJpbXBvcnQgc3RhdGlzdGljcyBmcm9tICcuLi9zdGF0aXN0aWNzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xyXG4gIGNvbnN0cnVjdG9yKGltYWdlLCB3b3JkLCB0cmFuc2xhdGlvbiwgbnVtYmVyKSB7XHJcbiAgICB0aGlzLmltYWdlID0gaW1hZ2U7XHJcbiAgICB0aGlzLndvcmQgPSB3b3JkO1xyXG4gICAgdGhpcy50cmFuc2xhdGlvbiA9IHRyYW5zbGF0aW9uO1xyXG4gICAgdGhpcy5udW1iZXIgPSBudW1iZXI7XHJcbiAgICB0aGlzLmNhcmQgPSBudWxsO1xyXG4gICAgdGhpcy5jYXJkRnJvbnQgPSBudWxsO1xyXG4gICAgdGhpcy5jYXJkQmFjayA9IG51bGw7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICB0aGlzLmNhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHRoaXMuY2FyZC5jbGFzc0xpc3QuYWRkKCdjYXJkLXdvcmQnLCAnYWN0aXZlLWNhcmQnKTtcclxuICAgIGNvbnN0IHJhbmRvbVJvdGF0ZSA9IChNYXRoLnJhbmRvbSgpICogKDMgLSAoLTMpKSAtIDMpLnRvRml4ZWQoMSk7XHJcbiAgICB0aGlzLmNhcmQuc2V0QXR0cmlidXRlKCdzdHlsZScsIGB0cmFuc2Zvcm06IHJvdGF0ZSgke3JhbmRvbVJvdGF0ZX1kZWcpO2ApO1xyXG5cclxuICAgIHRoaXMuY2FyZEZyb250ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICB0aGlzLmNhcmRGcm9udC5jbGFzc0xpc3QuYWRkKCdjYXJkLXdvcmRfX2Zyb250Jyk7XHJcbiAgICB0aGlzLmNhcmRGcm9udC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbnVtYmVyJywgYCR7dGhpcy5udW1iZXJ9YCk7XHJcbiAgICB0aGlzLmNhcmRGcm9udC5zZXRBdHRyaWJ1dGUoJ2RhdGEtbmFtZScsIGAke3RoaXMud29yZH1gKTtcclxuXHJcbiAgICBjb25zdCBjYXJkRnJvbnRJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgY2FyZEZyb250SW1hZ2UuY2xhc3NMaXN0LmFkZCgnY2FyZC13b3JkX19mcm9udC1pbWFnZScpO1xyXG4gICAgY29uc3QgaW1nRnJvbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuICAgIGltZ0Zyb250LnNyYyA9IGAuLyR7dGhpcy5pbWFnZX1gO1xyXG4gICAgY2FyZEZyb250SW1hZ2UuYXBwZW5kQ2hpbGQoaW1nRnJvbnQpO1xyXG5cclxuICAgIGNvbnN0IGNhcmRGcm9udE5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNhcmRGcm9udE5hbWUuY2xhc3NMaXN0LmFkZCgnY2FyZC13b3JkX19mcm9udC1uYW1lJyk7XHJcbiAgICBjYXJkRnJvbnROYW1lLmlubmVyVGV4dCA9IGAke3RoaXMud29yZH1gO1xyXG5cclxuICAgIGNvbnN0IGdhbWVNb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbGFiZWwgPiBpbnB1dCcpO1xyXG5cclxuICAgIHRoaXMuY2FyZEZyb250LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KSA9PiB7XHJcbiAgICAgIGlmICghZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncmV2ZXJzZS1idXR0b24nKSAmJiAhZ2FtZU1vZGUuY2hlY2tlZCkge1xyXG4gICAgICAgIHN0YXRpc3RpY3MuY291bnRpbmdTdGF0aXN0aWNzKHRoaXMud29yZCwgJ2NsaWNrcycpO1xyXG4gICAgICAgIHRoaXMudG9Wb2ljZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBjYXJkQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjYXJkQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ3JldmVyc2UtYnV0dG9uJyk7XHJcbiAgICBjYXJkQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGF0YS1udW1iZXInLCBgJHt0aGlzLm51bWJlcn1gKTtcclxuICAgIGNhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMucmV2ZXJzZUNhcmQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuY2FyZEZyb250LmFwcGVuZENoaWxkKGNhcmRGcm9udEltYWdlKTtcclxuICAgIHRoaXMuY2FyZEZyb250LmFwcGVuZENoaWxkKGNhcmRGcm9udE5hbWUpO1xyXG4gICAgdGhpcy5jYXJkRnJvbnQuYXBwZW5kQ2hpbGQoY2FyZEJ1dHRvbik7XHJcblxyXG4gICAgdGhpcy5jYXJkQmFjayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5jYXJkQmFjay5jbGFzc0xpc3QuYWRkKCdjYXJkLXdvcmRfX2JhY2snKTtcclxuXHJcbiAgICBjb25zdCBjYXJkQmFja0ltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjYXJkQmFja0ltYWdlLmNsYXNzTGlzdC5hZGQoJ2NhcmQtd29yZF9fYmFjay1pbWFnZScpO1xyXG4gICAgY29uc3QgaW1nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcbiAgICBpbWcuc3JjID0gYC4vJHt0aGlzLmltYWdlfWA7XHJcbiAgICBjYXJkQmFja0ltYWdlLmFwcGVuZENoaWxkKGltZyk7XHJcblxyXG4gICAgY29uc3QgY2FyZEJhY2tOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjYXJkQmFja05hbWUuY2xhc3NMaXN0LmFkZCgnY2FyZC13b3JkX19iYWNrLW5hbWUnKTtcclxuICAgIGNhcmRCYWNrTmFtZS5pbm5lclRleHQgPSBgJHt0aGlzLnRyYW5zbGF0aW9ufWA7XHJcblxyXG4gICAgdGhpcy5jYXJkQmFjay5hcHBlbmRDaGlsZChjYXJkQmFja0ltYWdlKTtcclxuICAgIHRoaXMuY2FyZEJhY2suYXBwZW5kQ2hpbGQoY2FyZEJhY2tOYW1lKTtcclxuXHJcbiAgICB0aGlzLmNhcmQuYXBwZW5kQ2hpbGQodGhpcy5jYXJkRnJvbnQpO1xyXG4gICAgdGhpcy5jYXJkLmFwcGVuZENoaWxkKHRoaXMuY2FyZEJhY2spO1xyXG5cclxuICAgIHJldHVybiB0aGlzLmNhcmQ7XHJcbiAgfVxyXG5cclxuICB0b1ZvaWNlKCkge1xyXG4gICAgY29uc3QgYXVkaW8gPSBuZXcgQXVkaW8oYC4vYXNzZXRzL3NvdW5kcy8ke3RoaXMud29yZH0ubXAzYCk7XHJcbiAgICBhdWRpby5sb2FkKCk7XHJcbiAgICBhdWRpby5wbGF5KCk7XHJcbiAgfVxyXG5cclxuICByZXZlcnNlQ2FyZCgpIHtcclxuICAgIHRoaXMuY2FyZEZyb250LnN0eWxlLnRyYW5zZm9ybSA9ICdyb3RhdGVZKDE4MGRlZyknO1xyXG4gICAgdGhpcy5jYXJkQmFjay5zdHlsZS50cmFuc2Zvcm0gPSAncm90YXRlWSgzNjBkZWcpJztcclxuICAgIHRoaXMuY2FyZC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLmNhcmRGcm9udC5zdHlsZS50cmFuc2Zvcm0gPSAncm90YXRlWSgwZGVnKSc7XHJcbiAgICAgIHRoaXMuY2FyZEJhY2suc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZVkoMTgwZGVnKSc7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cclxuaW1wb3J0IFRpdGxlQ2FyZCBmcm9tICcuL2NvbXBvbmVudHMvdGl0bGUtY2FyZCc7XHJcbmltcG9ydCBDYXJkIGZyb20gJy4vY29tcG9uZW50cy9jYXJkJztcclxuaW1wb3J0IFN3aXRjaGVyIGZyb20gJy4vY29tcG9uZW50cy9zd2l0Y2gnO1xyXG5pbXBvcnQgcGxheUdhbWUgZnJvbSAnLi9wbGF5LWdhbWUnO1xyXG5cclxuY29uc3QgZ2FtZUZpZWxkID0ge1xyXG4gIGFjdGl2ZUNhcmQ6IG51bGwsXHJcbiAgdGl0bGU6IHtcclxuICAgIDA6ICdBY3Rpb24gKHNldCBBKScsXHJcbiAgICAxOiAnQWN0aW9uIChzZXQgQiknLFxyXG4gICAgMjogJ0FjdGlvbiAoc2V0IEMpJyxcclxuICAgIDM6ICdBZGplY3RpdmUnLFxyXG4gICAgNDogJ0FuaW1hbCAoc2V0IEEpJyxcclxuICAgIDU6ICdBbmltYWwgKHNldCBCKScsXHJcbiAgICA2OiAnQ2xvdGhlcycsXHJcbiAgICA3OiAnRW1vdGlvbicsXHJcbiAgfSxcclxuXHJcbiAgaW1hZ2VzOiB7XHJcbiAgICAwOiAnLi9hc3NldHMvaW1hZ2VzL2NhdGVnb3JpZXMvYWN0aW9uQS5qcGcnLFxyXG4gICAgMTogJy4vYXNzZXRzL2ltYWdlcy9jYXRlZ29yaWVzL2FjdGlvbkIuanBnJyxcclxuICAgIDI6ICcuL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcmllcy9hY3Rpb25DLmpwZycsXHJcbiAgICAzOiAnLi9hc3NldHMvaW1hZ2VzL2NhdGVnb3JpZXMvYWRqZWN0aXZlLmpwZycsXHJcbiAgICA0OiAnLi9hc3NldHMvaW1hZ2VzL2NhdGVnb3JpZXMvYW5pbWFsQS5qcGcnLFxyXG4gICAgNTogJy4vYXNzZXRzL2ltYWdlcy9jYXRlZ29yaWVzL2FuaW1hbEIuanBnJyxcclxuICAgIDY6ICcuL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcmllcy9jbG90aGVzLmpwZycsXHJcbiAgICA3OiAnLi9hc3NldHMvaW1hZ2VzL2NhdGVnb3JpZXMvZW1vdGlvbi5qcGcnLFxyXG4gIH0sXHJcblxyXG4gIHNldFRpdGxlQ2FyZHMoKSB7XHJcbiAgICBwbGF5R2FtZS5yZXBlYXRNb2RlID0gZmFsc2U7XHJcbiAgICB0aGlzLnJlbW92ZUNvbnRlbnQoKTtcclxuICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ3dyYXBwZXInKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXInKS5hcHBlbmRDaGlsZChjb250YWluZXIpO1xyXG5cclxuICAgIGNvbnN0IGNhcmRzQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICBjYXJkc0NvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdjYXJkcy10aXRsZScpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgODsgaSArPSAxKSB7XHJcbiAgICAgIGNvbnN0IGNhcmQgPSBuZXcgVGl0bGVDYXJkKHRoaXMuaW1hZ2VzW2ldLCB0aGlzLnRpdGxlW2ldLCBpKTtcclxuICAgICAgY2FyZHNDb250YWluZXIuaW5uZXJIVE1MICs9IGNhcmQucmVuZGVyKCk7XHJcbiAgICB9XHJcbiAgICBjYXJkc0NvbnRhaW5lci5pbm5lckhUTUwgKz0gJzxkaXYgY2xhc3M9XCJzdWJ0aXRsZVwiPkhlbGxvISBjaG9vc2UgYSBjYXRlZ29yeTo8L2Rpdj4nO1xyXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNhcmRzQ29udGFpbmVyKTtcclxuXHJcbiAgICBjb25zdCBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkJyk7XHJcbiAgICBjYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XHJcbiAgICAgIGNhcmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVDb250ZW50KCk7XHJcbiAgICAgICAgdGhpcy5hY3RpdmVDYXJkID0gY2FyZC5nZXRBdHRyaWJ1dGUoJ2RhdGEtbnVtYmVyJyk7XHJcbiAgICAgICAgdGhpcy5zZXRDb250ZW50Q2FyZHModGhpcy5hY3RpdmVDYXJkKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9LFxyXG5cclxuICBzZXRDb250ZW50Q2FyZHMoYWN0aXZlQ2FyZCkge1xyXG4gICAgcGxheUdhbWUucmVwZWF0TW9kZSA9IGZhbHNlO1xyXG4gICAgdGhpcy5yZW1vdmVDb250ZW50KCk7XHJcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCd3cmFwcGVyJyk7XHJcbiAgICBjb250YWluZXIuaW5uZXJIVE1MICs9IFN3aXRjaGVyLnJlbmRlcigpO1xyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lcicpLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XHJcblxyXG4gICAgY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIGNhcmRzQ29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2NhcmRzJyk7XHJcblxyXG4gICAgZmV0Y2goJy4vYXNzZXRzL2pzb24vY2FyZHMuanNvbicpXHJcbiAgICAgIC50aGVuKChyZXN1bHQpID0+IHJlc3VsdC5qc29uKCkpXHJcbiAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgICAgICBjb25zdCBkYXRhID0gcmVzdWx0W2FjdGl2ZUNhcmRdO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZGF0YS5sZW5ndGg7IGkgKz0gMSkge1xyXG4gICAgICAgICAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGRhdGFbaV0uaW1hZ2UsIGRhdGFbaV0ud29yZCwgZGF0YVtpXS50cmFuc2xhdGlvbiwgaSk7XHJcbiAgICAgICAgICBjYXJkc0NvbnRhaW5lci5hcHBlbmRDaGlsZChjYXJkLnJlbmRlcigpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNhcmRzQ29udGFpbmVyKTtcclxuICAgICAgfSk7XHJcblxyXG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdpbnB1dFt0eXBlPWNoZWNrYm94XScpO1xyXG4gICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKCkgPT4ge1xyXG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudHJhaW4tbW9kZScpLmNsYXNzTGlzdC50b2dnbGUoJ2FjdGl2ZS1tb2RlJyk7XHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5nYW1lLW1vZGUnKS5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUtbW9kZScpO1xyXG4gICAgICBjb25zdCBjYXJkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkLXdvcmRfX2Zyb250LWltYWdlJyk7XHJcbiAgICAgIGlmIChpbnB1dC5jaGVja2VkKSB7XHJcbiAgICAgICAgY2FyZHMuZm9yRWFjaCgoY2FyZCkgPT4ge1xyXG4gICAgICAgICAgY2FyZC5zdHlsZS5oZWlnaHQgPSAnMjYwcHgnO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHBsYXlHYW1lLmluaXQoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XHJcbiAgICAgICAgICBjYXJkLnN0eWxlLmhlaWdodCA9ICcyMDBweCc7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXIgLndyYXBwZXInKS5yZW1vdmVDaGlsZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uLXBsYXknKSk7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRhaW5lciAud3JhcHBlcicpLnJlbW92ZUNoaWxkKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib3gtc3RhcnMnKSk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH0sXHJcblxyXG4gIHJlbW92ZUNvbnRlbnQoKSB7XHJcbiAgICBjb25zdCBjdXJyZW50Q29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb250YWluZXInKTtcclxuICAgIHdoaWxlIChjdXJyZW50Q29udGVudC5maXJzdENoaWxkKSB7XHJcbiAgICAgIGN1cnJlbnRDb250ZW50LnJlbW92ZUNoaWxkKGN1cnJlbnRDb250ZW50LmZpcnN0Q2hpbGQpO1xyXG4gICAgfVxyXG4gIH0sXHJcbn07XHJcblxyXG5nYW1lRmllbGQuc2V0VGl0bGVDYXJkcygpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZ2FtZUZpZWxkO1xyXG4iLCJjb25zdCBtb2RhbFdpbmRvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbCcpO1xyXG5jb25zdCBuYXZpZ2F0aW9uSXRlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2aWdhdGlvbi1pdGVtJyk7XHJcblxyXG5jb25zdCBidXJnZXJJY29uID0ge1xyXG4gIGJ1cmdlckJveDogbnVsbCxcclxuICBidXR0b25PZmY6IHRydWUsXHJcblxyXG4gIGluaXQoKSB7XHJcbiAgICB0aGlzLmJ1cmdlckJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcy5idXJnZXJCb3guY2xhc3NOYW1lID0gJ2J1cmdlci1tZW51X19idXR0b24nO1xyXG5cclxuICAgIGNvbnN0IGZpcnN0TEluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgZmlyc3RMSW5lLmNsYXNzTmFtZSA9ICdmaXJzdC1saW5lJztcclxuICAgIGNvbnN0IHNlY29uZExpbmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgIHNlY29uZExpbmUuY2xhc3NOYW1lID0gJ3NlY29uZC1saW5lJztcclxuICAgIGNvbnN0IHRoaXJkTGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgdGhpcmRMaW5lLmNsYXNzTmFtZSA9ICd0aGlyZC1saW5lJztcclxuXHJcbiAgICB0aGlzLmJ1cmdlckJveC5hcHBlbmRDaGlsZChmaXJzdExJbmUpO1xyXG4gICAgdGhpcy5idXJnZXJCb3guYXBwZW5kQ2hpbGQoc2Vjb25kTGluZSk7XHJcbiAgICB0aGlzLmJ1cmdlckJveC5hcHBlbmRDaGlsZCh0aGlyZExpbmUpO1xyXG5cclxuICAgIHRoaXMuYnVyZ2VyQm94LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICBuYXZpZ2F0aW9uSXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICAgIGl0ZW0uY2xhc3NMaXN0LnRvZ2dsZSgnbmF2aWdhdGlvbi1pdGVtX29wZW4nKTtcclxuICAgICAgfSk7XHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXJnZXItbWVudScpLmNsYXNzTGlzdC50b2dnbGUoJ2J1cmdlci1tZW51X29wZW4nKTtcclxuICAgICAgaWYgKHRoaXMuYnV0dG9uT2ZmKSB7XHJcbiAgICAgICAgZmlyc3RMSW5lLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVZKDEzcHgpIHJvdGF0ZSg0NWRlZyknO1xyXG4gICAgICAgIHNlY29uZExpbmUuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoLTQwcHgpJztcclxuICAgICAgICB0aGlyZExpbmUuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVkoLTEzcHgpIHJvdGF0ZSgtNDVkZWcpJztcclxuXHJcbiAgICAgICAgbW9kYWxXaW5kb3cuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWwtZGlzYWJsZWQnKTtcclxuICAgICAgICB0aGlzLmJ1dHRvbk9mZiA9IGZhbHNlO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGZpcnN0TEluZS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWSgwKSByb3RhdGUoMCknO1xyXG4gICAgICAgIHNlY29uZExpbmUuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoMCknO1xyXG4gICAgICAgIHRoaXJkTGluZS5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWSgwKSByb3RhdGUoMCknO1xyXG5cclxuICAgICAgICBtb2RhbFdpbmRvdy5jbGFzc0xpc3QuYWRkKCdtb2RhbC1kaXNhYmxlZCcpO1xyXG4gICAgICAgIHRoaXMuYnV0dG9uT2ZmID0gdHJ1ZTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmhlYWRlciAud3JhcHBlcicpLnByZXBlbmQodGhpcy5idXJnZXJCb3gpO1xyXG4gIH0sXHJcbn07XHJcblxyXG5idXJnZXJJY29uLmluaXQoKTtcclxuXHJcbm1vZGFsV2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIGJ1cmdlckljb24uYnVyZ2VyQm94LmNsaWNrKCk7XHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYnVyZ2VySWNvbjtcclxuIiwiaW1wb3J0IGdhbWVGaWVsZCBmcm9tICcuL2dhbWUtZmllbGQnO1xyXG5pbXBvcnQgYnVyZ2VySWNvbiBmcm9tICcuL2NvbXBvbmVudHMvYnVyZ2VyLWljb24nO1xyXG5pbXBvcnQgc3RhdGlzdGljcyBmcm9tICcuL3N0YXRpc3RpY3MnO1xyXG5cclxuY29uc3QgbGlua3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubmF2aWdhdGlvbi1pdGVtJyk7XHJcbmxpbmtzLmZvckVhY2goKGxpbmspID0+IHtcclxuICBsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgYnVyZ2VySWNvbi5idXJnZXJCb3guY2xpY2soKTtcclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXZpZ2F0aW9uLWl0ZW0uYWN0aXZlJykuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICBsaW5rLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG5cclxuICAgIGlmIChsaW5rLmdldEF0dHJpYnV0ZSgnZGF0YS1udW1iZXInKSA9PT0gJ21haW4nKSB7XHJcbiAgICAgIGdhbWVGaWVsZC5zZXRUaXRsZUNhcmRzKCk7XHJcbiAgICB9IGVsc2UgaWYgKGxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLW51bWJlcicpID09PSAnc3RhdGlzdGljcycpIHtcclxuICAgICAgY29uc3Qgc3RhdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2VuZ2xpc2gtZm9yLWtpZHMnKSk7XHJcbiAgICAgIGNvbnN0IGRhdGFGb3JUYWJsZSA9IHN0YXRpc3RpY3Muc29ydE9iamVjdChzdGF0KTtcclxuICAgICAgc3RhdGlzdGljcy5idWlsZGluZ1RhYmxlKGRhdGFGb3JUYWJsZSk7XHJcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RoOm50aC1jaGlsZCgxKScpLmlubmVySFRNTCA9ICcmZGFycjsgV29yZCc7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBnYW1lRmllbGQucmVtb3ZlQ29udGVudCgpO1xyXG4gICAgICBnYW1lRmllbGQuc2V0Q29udGVudENhcmRzKGxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLW51bWJlcicpKTtcclxuICAgIH1cclxuICB9KTtcclxufSk7XHJcblxyXG5jb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy50aXRsZScpO1xyXG50aXRsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBnYW1lRmllbGQuc2V0VGl0bGVDYXJkcygpO1xyXG5cclxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmF2aWdhdGlvbi1pdGVtLmFjdGl2ZScpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uYXZpZ2F0aW9uLWl0ZW06Zmlyc3QtY2hpbGQnKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcclxufSk7XHJcbiIsImltcG9ydCAnLi9nYW1lLWZpZWxkJztcclxuaW1wb3J0ICcuL3N0YXRpc3RpY3MnO1xyXG5pbXBvcnQgJy4vY29tcG9uZW50cy9zd2l0Y2gnO1xyXG5pbXBvcnQgJy4vY29tcG9uZW50cy9idXJnZXItaWNvbic7XHJcbmltcG9ydCAnLi9idXJnZXItbWVudSc7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xyXG4gIGZldGNoKCcuL2Fzc2V0cy9qc29uL2NhcmRzLmpzb24nKVxyXG4gICAgLnRoZW4oKHJlc3VsdCkgPT4gcmVzdWx0Lmpzb24oKSlcclxuICAgIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgICAgY29uc3QgaW1hZ2VzID0gcmVzdWx0LmZsYXQoKS5tYXAoKGl0ZW0pID0+IGl0ZW0uaW1hZ2UpO1xyXG5cclxuICAgICAgZnVuY3Rpb24gcHJlbG9hZEltYWdlcyhhcnIpIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkgKz0gMSkge1xyXG4gICAgICAgICAgY29uc3QgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcclxuICAgICAgICAgIGltYWdlLnNyYyA9IGAuLyR7YXJyW2ldfWA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHByZWxvYWRJbWFnZXMoaW1hZ2VzKTtcclxuICAgIH0pO1xyXG59KTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==